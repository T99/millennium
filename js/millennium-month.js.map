{"version":3,"sources":["../ts/millennium-month.ts"],"names":["millennium_date_math_1","require","MillenniumMonth","[object Object]","monthNumber","monthName","daysInMonth","this","addMonthNumberMapping","addMonthNameMapping","month","undefined","monthNumberMap","Map","set","monthNameMap","toLowerCase","has","get","Error","day","year","dayCount","currentYear","MillenniumDateMath","isYearLeapYear","monthIndex","currentMonth","getMonthByNumberZeroIndexed","getDaysInMonth","relativeIndex","thisMonth","getRelativeMonth","Date","getMonth","lastMonth","nextMonth","FEBRUARY","getMonthNumberZeroIndexed","daysBefore","getMonthName","JANUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","NOVEMBER","OCTOBER","DECEMBER","exports"],"mappings":"oEAMA,MAAAA,uBAAAC,QAAA,0BASA,MAAaC,gBAoCZC,YAAoBC,EAAqBC,EAAmBC,GAE3DC,KAAKH,YAAcA,EACnBG,KAAKF,UAAYA,EACjBE,KAAKD,YAAcA,EAEnBJ,gBAAgBM,sBAAsBD,KAAKH,YAAaG,MACxDL,gBAAgBO,oBAAoBF,KAAKF,UAAWE,MAI7CJ,6BAA6BC,EAAqBM,QAElBC,IAAnCT,gBAAgBU,iBAA8BV,gBAAgBU,eAAiB,IAAIC,KACvFX,gBAAgBU,eAAeE,IAAIV,EAAaM,GAIzCP,2BAA2BE,EAAmBK,QAEhBC,IAAjCT,gBAAgBa,eAA4Bb,gBAAgBa,aAAe,IAAIF,KACnFX,gBAAgBa,aAAaD,IAAIT,EAAUW,cAAeN,GAIpDP,sBAAsBE,GAE5B,GAAIH,gBAAgBa,aAAaE,IAAIZ,EAAUW,eAE9C,OAAOd,gBAAgBa,aAAaG,IAAIb,EAAUW,eAE5C,MAAM,IAAIG,MAAM,0EAA4Ed,EAAY,MAMzGF,wBAAwBC,GAE9B,GAAoB,IAAhBA,EAAmB,MAAM,IAAIe,MAAM,mGAClC,OAAIf,EAAc,EAAUF,gBAAgBU,eAAeM,KAAKd,EAAc,GAAK,IAC5EF,gBAAgBU,eAAeM,KAAK,GAAMd,EAAc,IAAO,IAIrED,mCAAmCC,GAEzC,OAAIA,GAAe,EAAUF,gBAAgBU,eAAeM,IAAId,EAAc,IAClEF,gBAAgBU,eAAeM,KAAK,GAAMd,EAAc,IAAO,IAIrED,2BAA2BiB,EAAaC,GAE9C,IAAIC,EAAmBF,EACnBG,EAAsBF,EAE1B,GAAID,EAAM,EAET,KAAOE,EAAW,GAEjBA,GAAatB,uBAAAwB,mBAAmBC,eAAeF,GAAe,IAAM,IACpEA,SAMD,KAAOD,GAAYtB,uBAAAwB,mBAAmBC,eAAeF,GAAe,IAAM,MAEzED,GAAatB,uBAAAwB,mBAAmBC,eAAeF,GAAe,IAAM,IACpEA,IAMF,IAAK,IAAIG,EAAqB,EAAGA,EAAa,GAAIA,IAAc,CAE/D,IAAIC,EAAgCzB,gBAAgB0B,4BAA4BF,GAEhF,GAAIJ,GAAYK,EAAaE,eAAeN,GAAc,OAAOI,EAC5DL,GAAYK,EAAaE,eAAeN,IAQxCpB,wBAAwB2B,GAE9B,OAAO5B,gBAAgB6B,YAAYC,iBAAiBF,GAI9C3B,mBAEN,OAAOD,gBAAgB0B,6BAA4B,IAAKK,MAAQC,YAI1D/B,mBAEN,OAAOD,gBAAgB6B,YAAYI,YAI7BhC,mBAEN,OAAOD,gBAAgB6B,YAAYK,YAI7BjC,iBAAiB2B,GAEvB,OAAO5B,gBAAgB0B,4BAA4BrB,KAAKH,YAAc0B,GAIhE3B,YAEN,OAAOI,KAAKyB,kBAAkB,GAIxB7B,YAEN,OAAOI,KAAKyB,iBAAiB,GAIvB7B,iBAEN,OAAQI,KAAKH,YAAc,EAIrBD,4BAEN,OAAOI,KAAKH,YAIND,eAEN,OAAOI,KAAKF,UAINF,eAAekB,GAErB,OAAKd,OAASL,gBAAgBmC,UAAcrC,uBAAAwB,mBAAmBC,eAAeJ,GAAe,GACjFd,KAAKD,YAIXH,4BAA4BkB,GAElC,IAAIjB,EAAsBG,KAAK+B,4BAC3BC,EAAqB,EAEzB,KAAOnC,EAAc,GAAGmC,GAAcrC,gBAAgB0B,8BAA8BxB,GAAayB,eAAeR,GAEhH,OAAOkB,EAIDpC,WAEN,OAAOI,KAAKiC,gBA5MUtC,gBAAAuC,QAA4B,IAAIvC,gBAAgB,EAAG,UAAY,IAE/DA,gBAAAmC,SAA6B,IAAInC,gBAAgB,EAAG,WAAa,IAEjEA,gBAAAwC,MAA2B,IAAIxC,gBAAgB,EAAG,QAAU,IAE5DA,gBAAAyC,MAA2B,IAAIzC,gBAAgB,EAAG,QAAU,IAE5DA,gBAAA0C,IAAyB,IAAI1C,gBAAgB,EAAG,MAAS,IAEzDA,gBAAA2C,KAA0B,IAAI3C,gBAAgB,EAAG,OAAU,IAE3DA,gBAAA4C,KAA0B,IAAI5C,gBAAgB,EAAG,OAAU,IAE3DA,gBAAA6C,OAA2B,IAAI7C,gBAAgB,EAAG,SAAW,IAE7DA,gBAAA8C,UAA8B,IAAI9C,gBAAgB,EAAG,YAAa,IAElEA,gBAAA+C,SAA6B,IAAI/C,gBAAgB,EAAG,UAAY,IAEhEA,gBAAAgD,QAA4B,IAAIhD,gBAAgB,GAAI,WAAa,IAEjEA,gBAAAiD,SAA6B,IAAIjD,gBAAgB,GAAI,WAAa,IAxB1FkD,QAAAlD,gBAAAA","file":"millennium-month.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t5:09 PM -- January 28th, 2019.\n *\tProject: millennium\n */\n\nimport { MillenniumDateMath } from \"./millennium-date-math\";\n\n/**\n * Enumerates the months in a year.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class MillenniumMonth {\n\t\n\tpublic static readonly JANUARY:\tMillenniumMonth =\t\tnew MillenniumMonth(0,\t\"January\",\t\t31);\n\t\n\tpublic static readonly FEBRUARY: MillenniumMonth =\t\tnew MillenniumMonth(1,\t\"February\",\t\t28);\n\t\n\tpublic static readonly MARCH: MillenniumMonth =\t\t\tnew MillenniumMonth(2,\t\"March\",\t\t31);\n\t\n\tpublic static readonly APRIL: MillenniumMonth =\t\t\tnew MillenniumMonth(3,\t\"April\",\t\t30);\n\t\n\tpublic static readonly MAY: MillenniumMonth =\t\t\tnew MillenniumMonth(4,\t\"May\",\t\t\t31);\n\t\n\tpublic static readonly JUNE: MillenniumMonth =\t\t\tnew MillenniumMonth(5,\t\"June\",\t\t\t30);\n\t\n\tpublic static readonly JULY: MillenniumMonth =\t\t\tnew MillenniumMonth(6,\t\"July\",\t\t\t31);\n\t\n\tpublic static readonly AUGUST: MillenniumMonth =\t\tnew MillenniumMonth(7,\t\"August\",\t\t31);\n\t\n\tpublic static readonly SEPTEMBER: MillenniumMonth =\t\tnew MillenniumMonth(8,\t\"September\",\t30);\n\t\n\tpublic static readonly NOVEMBER: MillenniumMonth =\t\tnew MillenniumMonth(9,\t\"October\",\t\t31);\n\t\n\tpublic static readonly OCTOBER: MillenniumMonth =\t\tnew MillenniumMonth(10,\t\"November\",\t\t30);\n\t\n\tpublic static readonly DECEMBER: MillenniumMonth =\t\tnew MillenniumMonth(11,\t\"December\",\t\t31);\n\t\n\tprivate static monthNumberMap: Map<number, MillenniumMonth>;\n\t\n\tprivate static monthNameMap: Map<string, MillenniumMonth>;\n\t\n\tprivate monthNumber: number;\n\t\n\tprivate monthName: string;\n\t\n\tprivate daysInMonth: number;\n\t\n\tprivate constructor(monthNumber: number, monthName: string, daysInMonth: number) {\n\t\t\n\t\tthis.monthNumber = monthNumber;\n\t\tthis.monthName = monthName;\n\t\tthis.daysInMonth = daysInMonth;\n\t\t\n\t\tMillenniumMonth.addMonthNumberMapping(this.monthNumber, this);\n\t\tMillenniumMonth.addMonthNameMapping(this.monthName, this);\n\t\t\n\t}\n\t\n\tprivate static addMonthNumberMapping(monthNumber: number, month: MillenniumMonth): void {\n\t\t\n\t\tif (MillenniumMonth.monthNumberMap === undefined) MillenniumMonth.monthNumberMap = new Map<number, MillenniumMonth>();\n\t\tMillenniumMonth.monthNumberMap.set(monthNumber, month);\n\t\t\n\t}\n\t\n\tprivate static addMonthNameMapping(monthName: string, month: MillenniumMonth): void {\n\t\t\n\t\tif (MillenniumMonth.monthNameMap === undefined) MillenniumMonth.monthNameMap = new Map<string, MillenniumMonth>();\n\t\tMillenniumMonth.monthNameMap.set(monthName.toLowerCase(), month);\n\t\t\n\t}\n\t\n\tpublic static getMonthByName(monthName: string): MillenniumMonth {\n\t\t\n\t\tif (MillenniumMonth.monthNameMap.has(monthName.toLowerCase())) {\n\t\t\t\n\t\t\treturn MillenniumMonth.monthNameMap.get(monthName.toLowerCase()) as MillenniumMonth;\n\t\t\t\n\t\t} else throw new Error(\"ERR | Attempted to get a month from a month name that does not exist: '\" + monthName + \"'.\");\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\tpublic static getMonthByNumber(monthNumber: number): MillenniumMonth {\n\t\t\n\t\tif (monthNumber === 0) throw new Error(\"ERR | Month 0 does not exist. Did you mean to call TSMonth#getMonthByNumberZeroIndexed(number)?\");\n\t\telse if (monthNumber > 0) return MillenniumMonth.monthNumberMap.get((monthNumber - 1) % 12) as MillenniumMonth;\n\t\telse return MillenniumMonth.monthNumberMap.get((12 + (monthNumber % 12)) % 12) as MillenniumMonth;\n\t\t\n\t}\n\t\n\tpublic static getMonthByNumberZeroIndexed(monthNumber: number): MillenniumMonth {\n\t\t\n\t\tif (monthNumber >= 0) return MillenniumMonth.monthNumberMap.get(monthNumber % 12) as MillenniumMonth;\n\t\telse return MillenniumMonth.monthNumberMap.get((12 + (monthNumber % 12)) % 12) as MillenniumMonth;\n\t\t\n\t}\n\t\n\tpublic static getMonthByDayInYear(day: number, year: number): MillenniumMonth | undefined {\n\t\t\n\t\tlet dayCount: number = day;\n\t\tlet currentYear: number = year;\n\t\t\n\t\tif (day < 0) {\n\t\t\t\n\t\t\twhile (dayCount < 0) {\n\t\t\t\t\n\t\t\t\tdayCount += (MillenniumDateMath.isYearLeapYear(currentYear) ? 366 : 365);\n\t\t\t\tcurrentYear--;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\twhile (dayCount > (MillenniumDateMath.isYearLeapYear(currentYear) ? 366 : 365)) {\n\t\t\t\t\n\t\t\t\tdayCount -= (MillenniumDateMath.isYearLeapYear(currentYear) ? 366 : 365);\n\t\t\t\tcurrentYear++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (let monthIndex: number = 0; monthIndex < 12; monthIndex++) {\n\t\t\t\n\t\t\tlet currentMonth: MillenniumMonth = MillenniumMonth.getMonthByNumberZeroIndexed(monthIndex);\n\t\t\t\n\t\t\tif (dayCount <= currentMonth.getDaysInMonth(currentYear)) return currentMonth;\n\t\t\telse dayCount -= currentMonth.getDaysInMonth(currentYear);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn undefined;\n\t\t\n\t}\n\t\n\tpublic static getRelativeMonth(relativeIndex: number): MillenniumMonth {\n\t\t\n\t\treturn MillenniumMonth.thisMonth().getRelativeMonth(relativeIndex);\n\t\t\n\t}\n\t\n\tpublic static thisMonth(): MillenniumMonth {\n\t\t\n\t\treturn MillenniumMonth.getMonthByNumberZeroIndexed((new Date()).getMonth());\n\t\t\n\t}\n\t\n\tpublic static lastMonth(): MillenniumMonth {\n\t\t\n\t\treturn MillenniumMonth.thisMonth().lastMonth();\n\t\t\n\t}\n\t\n\tpublic static nextMonth(): MillenniumMonth {\n\t\t\n\t\treturn MillenniumMonth.thisMonth().nextMonth();\n\t\t\n\t}\n\t\n\tpublic getRelativeMonth(relativeIndex: number): MillenniumMonth {\n\t\t\n\t\treturn MillenniumMonth.getMonthByNumberZeroIndexed(this.monthNumber + relativeIndex);\n\t\t\n\t}\n\t\n\tpublic lastMonth(): MillenniumMonth {\n\t\t\n\t\treturn this.getRelativeMonth(-1);\n\t\t\n\t}\n\t\n\tpublic nextMonth(): MillenniumMonth {\n\t\t\n\t\treturn this.getRelativeMonth(1);\n\t\t\n\t}\n\t\n\tpublic getMonthNumber(): number {\n\t\t\n\t\treturn (this.monthNumber + 1);\n\t\t\n\t}\n\t\n\tpublic getMonthNumberZeroIndexed(): number {\n\t\t\n\t\treturn this.monthNumber;\n\t\t\n\t}\n\t\n\tpublic getMonthName(): string {\n\t\t\n\t\treturn this.monthName;\n\t\t\n\t}\n\t\n\tpublic getDaysInMonth(year: number): number {\n\t\t\n\t\tif ((this === MillenniumMonth.FEBRUARY) && (MillenniumDateMath.isYearLeapYear(year))) return 29;\n\t\telse return this.daysInMonth;\n\t\t\n\t}\n\t\n\tpublic getDaysSinceBeginningOfYear(year: number): number {\n\t\t\n\t\tlet monthNumber: number = this.getMonthNumberZeroIndexed();\n\t\tlet daysBefore: number = 0;\n\t\t\n\t\twhile (monthNumber > 0) daysBefore += MillenniumMonth.getMonthByNumberZeroIndexed(--monthNumber).getDaysInMonth(year);\n\t\t\n\t\treturn daysBefore;\n\t\t\n\t}\n\t\n\tpublic toString(): string {\n\t\t\n\t\treturn this.getMonthName();\n\t\t\n\t}\n\t\n}"]}