{"version":3,"sources":["../ts/millennium-timespan.ts"],"names":["millennium_time_unit_1","require","millennium_date_1","MillenniumTimespan","[object Object]","milliseconds","this","date1","date2","oldest","Math","min","getAdjustedEpochTime","newest","max","date","MillenniumDate","fromNow","MillenniumTimeUnit","SECOND","getMilliseconds","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","units","enforceUse","sortedUnits","length","largestIndex","index","push","splice","unitStrings","remainingTime","unit","unitString","amount","floor","getSingularName","getPluralName","finalResult","exports"],"mappings":"oEAMA,MAAAA,uBAAAC,QAAA,0BACAC,kBAAAD,QAAA,qBASA,MAAaE,mBAIZC,YAAmBC,GAElBC,KAAKD,aAAeA,EAIdD,eAAeG,EAAuBC,GAE5C,IAAIC,EAAiBC,KAAKC,IAAIJ,EAAMK,uBAAwBJ,EAAMI,wBAC9DC,EAAiBH,KAAKI,IAAIP,EAAMK,uBAAwBJ,EAAMI,wBAElE,OAAO,IAAIT,mBAAmBU,EAASJ,GAIjCL,aAAaW,GAEnB,OAAO,IAAIZ,mBAAmBD,kBAAAc,eAAeC,UAAUL,uBAAyBG,EAAKH,wBAI/ER,aAAaW,GAEnB,OAAO,IAAIZ,mBAAmBY,EAAKH,uBAAyBV,kBAAAc,eAAeC,UAAUL,wBAI/ER,iBAEN,OAAOE,KAAKD,aAIND,YAEN,OAAQE,KAAKD,aAAeL,uBAAAkB,mBAAmBC,OAAOC,kBAIhDhB,YAEN,OAAQE,KAAKD,aAAeL,uBAAAkB,mBAAmBG,OAAOD,kBAIhDhB,UAEN,OAAQE,KAAKD,aAAeL,uBAAAkB,mBAAmBI,KAAKF,kBAI9ChB,SAEN,OAAQE,KAAKD,aAAeL,uBAAAkB,mBAAmBK,IAAIH,kBAI7ChB,UAEN,OAAQE,KAAKD,aAAeL,uBAAAkB,mBAAmBM,KAAKJ,kBAI9ChB,WAEN,OAAQE,KAAKD,aAAeL,uBAAAkB,mBAAmBO,MAAML,kBAI/ChB,UAEN,OAAQE,KAAKD,aAAeL,uBAAAkB,mBAAmBQ,KAAKN,kBAI9ChB,kBAAkBuB,EAA6BC,GAErD,IAAIC,EAAoC,GAExC,KAAwB,IAAjBF,EAAMG,QAAc,CAE1B,IAAIC,EAAuB,EAE3B,IAAK,IAAIC,EAAgB,EAAGA,EAAQL,EAAMG,OAAQE,IAE7CL,EAAMK,GAAOZ,kBAAoBO,EAAMI,GAAcX,oBAAmBW,EAAeC,GAI5FH,EAAYI,KAAKN,EAAMI,IACvBJ,EAAMO,OAAOH,EAAc,GAI5B,IAAII,EAAwB,GACxBC,EAAwB9B,KAAKD,aAEjC,IAAK,IAAIgC,KAAQR,EAAa,CAE7B,IAAIS,EAAqB,GAErBC,EAAiB7B,KAAK8B,MAAMJ,EAAgBC,EAAKjB,oBAErC,IAAXmB,GAA8B,IAAXA,IAAiC,IAAfX,KAEzCU,GAAcC,EAEdD,GAAc,IAEIA,GAAH,IAAXC,EAA4BF,EAAKI,kBAClBJ,EAAKK,gBAExBN,GAAkBG,EAASF,EAAKjB,mBAId,KAAfkB,GAAmBH,EAAYF,KAAKK,GAIzC,IAAIK,EAAsB,GAE1B,IAAK,IAAIX,EAAgB,EAAGA,EAAQG,EAAYL,OAAQE,IAEvDW,GAAeR,EAAYH,GAEvBA,EAAQG,EAAYL,OAAS,EAAGa,GAAe,KAC1CX,EAAQG,EAAYL,OAAS,IAAGa,GAAe,UAIzD,OAAOA,GAvITC,QAAAzC,mBAAAA","file":"millennium-timespan.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t7:16 PM -- March 07th, 2019.\n *\tProject: millennium\n */\n\nimport { MillenniumTimeUnit } from \"./millennium-time-unit\";\nimport { MillenniumDate } from \"./millennium-date\";\n\n/**\n * A class representing a length of time.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class MillenniumTimespan {\n\t\n\tprivate milliseconds: number;\n\t\n\tpublic constructor(milliseconds: number) {\n\t\t\n\t\tthis.milliseconds = milliseconds;\n\t\t\n\t}\n\t\n\tpublic static between(date1: MillenniumDate, date2: MillenniumDate): MillenniumTimespan {\n\t\t\n\t\tlet oldest: number = Math.min(date1.getAdjustedEpochTime(), date2.getAdjustedEpochTime());\n\t\tlet newest: number = Math.max(date1.getAdjustedEpochTime(), date2.getAdjustedEpochTime());\n\t\t\n\t\treturn new MillenniumTimespan(newest - oldest);\n\t\t\n\t}\n\t\n\tpublic static since(date: MillenniumDate): MillenniumTimespan {\n\t\t\n\t\treturn new MillenniumTimespan(MillenniumDate.fromNow().getAdjustedEpochTime() - date.getAdjustedEpochTime());\n\t\t\n\t}\n\t\n\tpublic static until(date: MillenniumDate): MillenniumTimespan {\n\t\t\n\t\treturn new MillenniumTimespan(date.getAdjustedEpochTime() - MillenniumDate.fromNow().getAdjustedEpochTime());\n\t\t\n\t}\n\t\n\tpublic toMilliseconds(): number {\n\t\t\n\t\treturn this.milliseconds;\n\t\t\n\t}\n\t\n\tpublic toSeconds(): number {\n\t\t\n\t\treturn (this.milliseconds / MillenniumTimeUnit.SECOND.getMilliseconds());\n\t\t\n\t}\n\t\n\tpublic toMinutes(): number {\n\t\t\n\t\treturn (this.milliseconds / MillenniumTimeUnit.MINUTE.getMilliseconds());\n\t\t\n\t}\n\t\n\tpublic toHours(): number {\n\t\t\n\t\treturn (this.milliseconds / MillenniumTimeUnit.HOUR.getMilliseconds());\n\t\t\n\t}\n\t\n\tpublic toDays(): number {\n\t\t\n\t\treturn (this.milliseconds / MillenniumTimeUnit.DAY.getMilliseconds());\n\t\t\n\t}\n\t\n\tpublic toWeeks(): number {\n\t\t\n\t\treturn (this.milliseconds / MillenniumTimeUnit.WEEK.getMilliseconds());\n\t\t\n\t}\n\t\n\tpublic toMonths(): number {\n\t\t\n\t\treturn (this.milliseconds / MillenniumTimeUnit.MONTH.getMilliseconds());\n\t\t\n\t}\n\t\n\tpublic toYears(): number {\n\t\t\n\t\treturn (this.milliseconds / MillenniumTimeUnit.YEAR.getMilliseconds());\n\t\t\n\t}\n\t\n\tpublic toStringFromUnits(units: MillenniumTimeUnit[], enforceUse?: boolean): string {\n\t\t\n\t\tlet sortedUnits: MillenniumTimeUnit[] = [];\n\t\t\n\t\twhile (units.length !== 0) {\n\t\t\t\n\t\t\tlet largestIndex: number = 0;\n\t\t\t\n\t\t\tfor (let index: number = 1; index < units.length; index++) {\n\t\t\t\t\n\t\t\t\tif (units[index].getMilliseconds() > units[largestIndex].getMilliseconds()) largestIndex = index;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsortedUnits.push(units[largestIndex]);\n\t\t\tunits.splice(largestIndex, 1);\n\t\t\t\n\t\t}\n\t\t\n\t\tlet unitStrings: string[] = [];\n\t\tlet remainingTime: number = this.milliseconds;\n\t\t\n\t\tfor (let unit of sortedUnits) {\n\t\t\t\n\t\t\tlet unitString: string = \"\";\n\t\t\t\n\t\t\tlet amount: number = Math.floor(remainingTime / unit.getMilliseconds());\n\t\t\t\n\t\t\tif ((amount !== 0) || ((amount === 0) && (enforceUse === true))) {\n\t\t\t\t\n\t\t\t\tunitString += amount;\n\t\t\t\t\n\t\t\t\tunitString += \" \";\n\t\t\t\t\n\t\t\t\tif (amount === 1) unitString += unit.getSingularName();\n\t\t\t\telse unitString += unit.getPluralName();\n\t\t\t\t\n\t\t\t\tremainingTime -= (amount * unit.getMilliseconds());\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (unitString !== \"\") unitStrings.push(unitString);\n\t\t\t\n\t\t}\n\t\t\n\t\tlet finalResult: string = \"\";\n\t\t\n\t\tfor (let index: number = 0; index < unitStrings.length; index++) {\n\t\t\t\n\t\t\tfinalResult += unitStrings[index];\n\t\t\t\n\t\t\tif (index < unitStrings.length - 2) finalResult += \", \";\n\t\t\telse if (index < unitStrings.length - 1) finalResult += \", and \";\n\t\t\t\n\t\t}\n\t\t\n\t\treturn finalResult;\n\t\t\n\t}\n\t\n}"]}